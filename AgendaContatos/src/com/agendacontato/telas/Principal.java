package com.agendacontato.telas;

import com.agendacontato.dominio.ContatoAD;
import com.agendacontato.dominio.Contato;
import com.agendacontato.utilitarios.BancoDados;
import com.agendacontato.utilitarios.Conexao;
import com.agendacontato.utilitarios.TipoOpcoes;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

public class Principal extends javax.swing.JFrame
        implements ListSelectionListener {

    private DefaultTableModel modeloDaTabelaContatos;
    private Contato contatoSelecionado;

    public Principal() {
        initComponents();
        configureComponentes();
        validaBotoes();
        configBancoDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTContatos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jBNovoContato = new javax.swing.JButton();
        JBExcluirContato = new javax.swing.JButton();
        JBPesquisarContato = new javax.swing.JButton();
        JBSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agenda de contatos");
        setResizable(false);
        setSize(new java.awt.Dimension(500, 400));

        jPanel3.setBackground(java.awt.Color.white);

        jLabel1.setText("Lista de contatos:");

        JTContatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Telefone", "Tipo"
            }
        ));
        jScrollPane1.setViewportView(JTContatos);

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setBorder(new javax.swing.border.LineBorder(java.awt.Color.lightGray, 1, true));
        jPanel1.setForeground(java.awt.Color.lightGray);

        jBNovoContato.setText("Novo");
        jBNovoContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoContatoActionPerformed(evt);
            }
        });

        JBExcluirContato.setText("Excluir");
        JBExcluirContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBExcluirContatoActionPerformed(evt);
            }
        });

        JBPesquisarContato.setText("Pesquisar");
        JBPesquisarContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBPesquisarContatoActionPerformed(evt);
            }
        });

        JBSair.setText("Sair");
        JBSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jBNovoContato, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JBExcluirContato)
                .addGap(18, 18, 18)
                .addComponent(JBPesquisarContato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JBSair)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {JBExcluirContato, JBPesquisarContato, JBSair, jBNovoContato});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(JBExcluirContato)
                    .addComponent(jBNovoContato, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBPesquisarContato)
                    .addComponent(JBSair))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {JBExcluirContato, JBPesquisarContato, JBSair, jBNovoContato});

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBNovoContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoContatoActionPerformed
        NovoContato nc = new NovoContato();
        nc.setLocationRelativeTo(this);
        nc.setResizable(false);
        nc.setAlwaysOnTop(true);
        nc.setVisible(true);
        nc.quandoSalvarContato(new Thread(() -> {
            atualizarTabelaContatos();
            validaBotoes();
        }));
    }//GEN-LAST:event_jBNovoContatoActionPerformed

    private void JBSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBSairActionPerformed
        // TODO add your handling code here:
        dispose();
        System.exit(0);
    }//GEN-LAST:event_JBSairActionPerformed

    private void JBExcluirContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBExcluirContatoActionPerformed
        // TODO add your handling code here:
        if (this.contatoSelecionado != null) {
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esse contato ?", "QuestÃ£o", JOptionPane.OK_CANCEL_OPTION);
            if (resposta == 0) {
                quandoExcluirContato(() -> {
                    try {
                        ContatoAD contatoAD = new ContatoAD(Conexao.pegarConexao());
                        contatoAD.excluir(new Contato(contatoSelecionado.getId()));
                        atualizarTabelaContatos();
                        validaBotoes();
                    } catch (ClassNotFoundException | SQLException ex) {
                    }
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um contato!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_JBExcluirContatoActionPerformed

    private void JBPesquisarContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBPesquisarContatoActionPerformed
        // TODO add your handling code here:

        String resposta = JOptionPane.showInputDialog(this, "Digite o nome para a pesquisa", "Pesquisa", JOptionPane.QUESTION_MESSAGE);
        if (resposta != null && !resposta.isEmpty()) {
            try {
                ContatoAD contatoAD = new ContatoAD(Conexao.pegarConexao());
                List<Contato> conatos = contatoAD.buscar(new Contato(resposta));
                atualizarTabelaContatosPesquisa(conatos);
            } catch (ClassNotFoundException | SQLException ex) {
            }
        } else {
            atualizarTabelaContatos();
        }

    }//GEN-LAST:event_JBPesquisarContatoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Principal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBExcluirContato;
    private javax.swing.JButton JBPesquisarContato;
    private javax.swing.JButton JBSair;
    private javax.swing.JTable JTContatos;
    private javax.swing.JButton jBNovoContato;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void configureComponentes() {
        this.modeloDaTabelaContatos = (DefaultTableModel) JTContatos.getModel();
        JTContatos.getSelectionModel().addListSelectionListener(this);
        atualizarTabelaContatos();
    }

    private void quandoExcluirContato(Runnable runnable) {
        new Thread(runnable).start();
    }

    private void atualizarTabelaContatos() {
        try {
            this.modeloDaTabelaContatos.setNumRows(0);
            ContatoAD contatoAD = new ContatoAD(Conexao.pegarConexao());
            List<Contato> listaDeContatos = contatoAD.listar();
            for (Contato contato : listaDeContatos) {
                this.modeloDaTabelaContatos.addRow(new Object[]{contato.getId(), contato.getNome(),
                    contato.getTelefone(), pegarTipo(contato.getTipo())});
            }
        } catch (ClassNotFoundException | SQLException ex) {
        }
    }

    private void validaBotoes() {
        if (this.modeloDaTabelaContatos.getRowCount() <= 0) {
            JBExcluirContato.setEnabled(false);
            JBPesquisarContato.setEnabled(false);
        } else {
            JBExcluirContato.setEnabled(true);
            JBPesquisarContato.setEnabled(true);
        }
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        try {
            int id = Integer.parseInt(this.modeloDaTabelaContatos.getValueAt(
                    JTContatos.getSelectedRow(), 0).toString());
            String nome = this.modeloDaTabelaContatos.getValueAt(
                    JTContatos.getSelectedRow(), 1).toString();
            String telefone = this.modeloDaTabelaContatos.getValueAt(
                    JTContatos.getSelectedRow(), 2).toString();

            this.contatoSelecionado = new Contato();
            this.contatoSelecionado.setId(id);
            this.contatoSelecionado.setNome(nome);
            this.contatoSelecionado.setTelefone(telefone);
        } catch (ArrayIndexOutOfBoundsException ed) {
        }

    }

    private void atualizarTabelaContatosPesquisa(List<Contato> conatos) {
        this.modeloDaTabelaContatos.setNumRows(0);
        for (Contato contato : conatos) {
            this.modeloDaTabelaContatos.addRow(new Object[]{contato.getId(), contato.getNome(),
                contato.getTelefone(), pegarTipo(contato.getTipo())});
        }
    }

    private String pegarTipo(int tipoSelecionado) {
        TipoOpcoes[] tipos = TipoOpcoes.values();
        for (TipoOpcoes tipo : tipos) {
            if (tipoSelecionado == tipo.getValor()) {
                return tipo.name();
            }
        }
        return null;
    }

    private void configBancoDados() {
        BancoDados bd = new BancoDados();
        if (bd.eParaRestaurarBanco()) {
            bd.execute();
        }
    }
}
